#include "minishell.h"

char	*convert_pid(pid_t pid)
{
	char	*pid_str;

	pid_str = ft_itoa(pid);
	if (!pid_str)
		return (NULL);
	return (pid_str);
}

int	get_special_var_length(char *str, int i, t_shell *shell)
{
	if (str[i + 1] == '$')
		return (10);
	else if (str[i + 1] == '?')
		return (3);
	return (0);
}

int	skip_var_name(char *str, int i)
{
	char	*var_name;
	int		new_i;

	var_name = extract_var_name(str, i + 1);
	if (var_name)
	{
		new_i = i + ft_strlen(var_name) + 1;
		free(var_name);
		return (new_i);
	}
	return (i + 1);
}

int	process_dollar_sign(char *str, int i, char **env, t_shell *shell)
{
	int	len_added;

	len_added = 0;
	if (str[i + 1] == '$' || str[i + 1] == '?')
		len_added = get_special_var_length(str, i, shell);
	else if (ft_isalnum(str[i + 1]) || str[i + 1] == '_')
		len_added = get_env_var_length(str, i, env);
	else
		len_added = 1;
	return (len_added);
}

void	expand_special_var(char *str, int *i, char *expanded, int *pos, t_shell *shell)
{
	char	*value;
	
	if (str[*i + 1] == '$')
	{
		value = convert_pid(getpid());
		ft_strcpy(&expanded[*pos], value);
		*pos += ft_strlen(value);
		free(value);
		*i += 2;
	}
	else if (str[*i + 1] == '?')
	{
		value = ft_itoa(shell->exit_status);
		ft_strcpy(&expanded[*pos], value);
		*pos += ft_strlen(value);
		free(value);
		*i += 2;
	}
}